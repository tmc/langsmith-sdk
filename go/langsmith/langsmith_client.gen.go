// Package langsmith provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package langsmith

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"net/url"
	"strings"
	"time"

	"github.com/oapi-codegen/runtime"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Defines values for RunTypeEnum.
const (
	Chain     RunTypeEnum = "chain"
	Embedding RunTypeEnum = "embedding"
	Llm       RunTypeEnum = "llm"
	Parser    RunTypeEnum = "parser"
	Prompt    RunTypeEnum = "prompt"
	Retriever RunTypeEnum = "retriever"
	Tool      RunTypeEnum = "tool"
)

// ChatCompletionChoice defines model for ChatCompletionChoice.
type ChatCompletionChoice struct {
	FinishReason *string                        `json:"finish_reason,omitempty"`
	Index        *int                           `json:"index,omitempty"`
	Message      *ChatCompletionResponseMessage `json:"message,omitempty"`
}

// ChatCompletionFunctionCall defines model for ChatCompletionFunctionCall.
type ChatCompletionFunctionCall struct {
	Arguments *string `json:"arguments,omitempty"`
	Name      *string `json:"name,omitempty"`
}

// ChatCompletionFunctionParameters defines model for ChatCompletionFunctionParameters.
type ChatCompletionFunctionParameters struct {
	Properties *map[string]interface{} `json:"properties,omitempty"`
	Type       *string                 `json:"type,omitempty"`
}

// ChatCompletionFunctions defines model for ChatCompletionFunctions.
type ChatCompletionFunctions struct {
	Description *string                           `json:"description,omitempty"`
	Name        *string                           `json:"name,omitempty"`
	Parameters  *ChatCompletionFunctionParameters `json:"parameters,omitempty"`
}

// ChatCompletionRequestMessage defines model for ChatCompletionRequestMessage.
type ChatCompletionRequestMessage struct {
	Content      *string                     `json:"content,omitempty"`
	FunctionCall *ChatCompletionFunctionCall `json:"function_call,omitempty"`
	Name         *string                     `json:"name,omitempty"`
	Role         *string                     `json:"role,omitempty"`
}

// ChatCompletionResponseMessage defines model for ChatCompletionResponseMessage.
type ChatCompletionResponseMessage struct {
	Content      *string                     `json:"content,omitempty"`
	FunctionCall *ChatCompletionFunctionCall `json:"function_call,omitempty"`
	Role         *string                     `json:"role,omitempty"`
}

// Choice defines model for Choice.
type Choice struct {
	FinishReason *string   `json:"finish_reason,omitempty"`
	Index        *int      `json:"index,omitempty"`
	Logprobs     *Logprobs `json:"logprobs,omitempty"`
	Text         *string   `json:"text,omitempty"`
}

// CompletionUsage defines model for CompletionUsage.
type CompletionUsage struct {
	CompletionTokens *int `json:"completion_tokens,omitempty"`
	PromptTokens     *int `json:"prompt_tokens,omitempty"`
	TotalTokens      *int `json:"total_tokens,omitempty"`
}

// CreateChatCompletionRequest defines model for CreateChatCompletionRequest.
type CreateChatCompletionRequest struct {
	FrequencyPenalty *float32                          `json:"frequency_penalty,omitempty"`
	Functions        *[]ChatCompletionFunctions        `json:"functions,omitempty"`
	LogitBias        *map[string]int                   `json:"logit_bias,omitempty"`
	MaxTokens        *int                              `json:"max_tokens,omitempty"`
	Messages         *[]ChatCompletionRequestMessage   `json:"messages,omitempty"`
	Model            *string                           `json:"model,omitempty"`
	N                *int                              `json:"n,omitempty"`
	PresencePenalty  *float32                          `json:"presence_penalty,omitempty"`
	Stop             *CreateChatCompletionRequest_Stop `json:"stop,omitempty"`
	Stream           *bool                             `json:"stream,omitempty"`
	Temperature      *float32                          `json:"temperature,omitempty"`
	TopP             *float32                          `json:"top_p,omitempty"`
}

// CreateChatCompletionRequestStop0 defines model for .
type CreateChatCompletionRequestStop0 = string

// CreateChatCompletionRequestStop1 defines model for .
type CreateChatCompletionRequestStop1 = []string

// CreateChatCompletionRequest_Stop defines model for CreateChatCompletionRequest.Stop.
type CreateChatCompletionRequest_Stop struct {
	union json.RawMessage
}

// CreateChatCompletionResponse defines model for CreateChatCompletionResponse.
type CreateChatCompletionResponse struct {
	Choices *[]ChatCompletionChoice `json:"choices,omitempty"`
	Created *int                    `json:"created,omitempty"`
	Id      *string                 `json:"id,omitempty"`
	Model   *string                 `json:"model,omitempty"`
	Object  *string                 `json:"object,omitempty"`
	Usage   *CompletionUsage        `json:"usage,omitempty"`
}

// CreateCompletionRequest defines model for CreateCompletionRequest.
type CreateCompletionRequest struct {
	BestOf           *int                           `json:"best_of,omitempty"`
	Echo             *bool                          `json:"echo,omitempty"`
	FrequencyPenalty *float32                       `json:"frequency_penalty,omitempty"`
	LogitBias        *map[string]int                `json:"logit_bias,omitempty"`
	Logprobs         *int                           `json:"logprobs,omitempty"`
	MaxTokens        *int                           `json:"max_tokens,omitempty"`
	Model            CreateCompletionRequest_Model  `json:"model"`
	N                *int                           `json:"n,omitempty"`
	PresencePenalty  *float32                       `json:"presence_penalty,omitempty"`
	Prompt           CreateCompletionRequest_Prompt `json:"prompt"`
	Stop             *CreateCompletionRequest_Stop  `json:"stop,omitempty"`
	Stream           *bool                          `json:"stream,omitempty"`
	Suffix           *string                        `json:"suffix,omitempty"`
	Temperature      *float32                       `json:"temperature,omitempty"`
	TopP             *float32                       `json:"top_p,omitempty"`
	User             *string                        `json:"user,omitempty"`
}

// CreateCompletionRequestModel0 defines model for .
type CreateCompletionRequestModel0 = string

// CreateCompletionRequestModel1 defines model for .
type CreateCompletionRequestModel1 map[string]CreateCompletionRequest_Model_1_AdditionalProperties

// CreateCompletionRequestModel10 defines model for .
type CreateCompletionRequestModel10 = string

// CreateCompletionRequestModel11 defines model for .
type CreateCompletionRequestModel11 = []string

// CreateCompletionRequest_Model_1_AdditionalProperties defines model for CreateCompletionRequest.Model.1.AdditionalProperties.
type CreateCompletionRequest_Model_1_AdditionalProperties struct {
	union json.RawMessage
}

// CreateCompletionRequest_Model defines model for CreateCompletionRequest.Model.
type CreateCompletionRequest_Model struct {
	union json.RawMessage
}

// CreateCompletionRequestPrompt0 defines model for .
type CreateCompletionRequestPrompt0 = string

// CreateCompletionRequestPrompt1 defines model for .
type CreateCompletionRequestPrompt1 = []string

// CreateCompletionRequestPrompt2 defines model for .
type CreateCompletionRequestPrompt2 = []int

// CreateCompletionRequestPrompt3 defines model for .
type CreateCompletionRequestPrompt3 = [][]int

// CreateCompletionRequest_Prompt defines model for CreateCompletionRequest.Prompt.
type CreateCompletionRequest_Prompt struct {
	union json.RawMessage
}

// CreateCompletionRequestStop0 defines model for .
type CreateCompletionRequestStop0 = string

// CreateCompletionRequestStop1 defines model for .
type CreateCompletionRequestStop1 = []string

// CreateCompletionRequest_Stop defines model for CreateCompletionRequest.Stop.
type CreateCompletionRequest_Stop struct {
	union json.RawMessage
}

// CreateCompletionResponse defines model for CreateCompletionResponse.
type CreateCompletionResponse struct {
	Choices *[]Choice        `json:"choices,omitempty"`
	Created *string          `json:"created,omitempty"`
	Id      *string          `json:"id,omitempty"`
	Model   *string          `json:"model,omitempty"`
	Object  *string          `json:"object,omitempty"`
	Usage   *CompletionUsage `json:"usage,omitempty"`
}

// HTTPValidationError defines model for HTTPValidationError.
type HTTPValidationError struct {
	Detail *[]ValidationError `json:"detail,omitempty"`
}

// Logprobs defines model for Logprobs.
type Logprobs struct {
	TextOffset    *[]int            `json:"text_offset,omitempty"`
	TokenLogprobs *[]float32        `json:"token_logprobs,omitempty"`
	Tokens        *[]string         `json:"tokens,omitempty"`
	TopLogprobs   *[]map[string]int `json:"top_logprobs,omitempty"`
}

// RunCreateSchema Create class for a Run object.
type RunCreateSchema struct {
	ChildRuns          *[]RunCreateSchema        `json:"child_runs,omitempty"`
	EndTime            *time.Time                `json:"end_time,omitempty"`
	Error              *string                   `json:"error,omitempty"`
	Events             *[]map[string]interface{} `json:"events,omitempty"`
	ExecutionOrder     *int                      `json:"execution_order,omitempty"`
	Extra              *map[string]interface{}   `json:"extra,omitempty"`
	Id                 *openapi_types.UUID       `json:"id,omitempty"`
	Inputs             *map[string]interface{}   `json:"inputs,omitempty"`
	ManifestId         *openapi_types.UUID       `json:"manifest_id,omitempty"`
	Name               string                    `json:"name"`
	Outputs            *map[string]interface{}   `json:"outputs,omitempty"`
	ParentRunId        *openapi_types.UUID       `json:"parent_run_id,omitempty"`
	ReferenceExampleId *openapi_types.UUID       `json:"reference_example_id,omitempty"`

	// RunType Enum for run types.
	RunType     RunTypeEnum             `json:"run_type"`
	Serialized  *map[string]interface{} `json:"serialized,omitempty"`
	SessionId   *openapi_types.UUID     `json:"session_id,omitempty"`
	SessionName *string                 `json:"session_name,omitempty"`
	StartTime   *time.Time              `json:"start_time,omitempty"`
	Tags        *[]string               `json:"tags,omitempty"`
}

// RunCreateSchemaExtended Create class for a run object, with additional typehints.
type RunCreateSchemaExtended struct {
	ChildRuns          *[]RunCreateSchema               `json:"child_runs,omitempty"`
	EndTime            *time.Time                       `json:"end_time,omitempty"`
	Error              *string                          `json:"error,omitempty"`
	Events             *[]map[string]interface{}        `json:"events,omitempty"`
	ExecutionOrder     *int                             `json:"execution_order,omitempty"`
	Extra              *map[string]interface{}          `json:"extra,omitempty"`
	Id                 *openapi_types.UUID              `json:"id,omitempty"`
	Inputs             *RunCreateSchemaExtended_Inputs  `json:"inputs,omitempty"`
	ManifestId         *openapi_types.UUID              `json:"manifest_id,omitempty"`
	Name               string                           `json:"name"`
	Outputs            *RunCreateSchemaExtended_Outputs `json:"outputs,omitempty"`
	ParentRunId        *openapi_types.UUID              `json:"parent_run_id,omitempty"`
	ReferenceExampleId *openapi_types.UUID              `json:"reference_example_id,omitempty"`

	// RunType Enum for run types.
	RunType     RunTypeEnum             `json:"run_type"`
	Serialized  *map[string]interface{} `json:"serialized,omitempty"`
	SessionId   *openapi_types.UUID     `json:"session_id,omitempty"`
	SessionName *string                 `json:"session_name,omitempty"`
	StartTime   *time.Time              `json:"start_time,omitempty"`
	Tags        *[]string               `json:"tags,omitempty"`
}

// RunCreateSchemaExtendedInputs0 defines model for .
type RunCreateSchemaExtendedInputs0 = map[string]interface{}

// RunCreateSchemaExtended_Inputs defines model for RunCreateSchemaExtended.Inputs.
type RunCreateSchemaExtended_Inputs struct {
	union json.RawMessage
}

// RunCreateSchemaExtendedOutputs0 defines model for .
type RunCreateSchemaExtendedOutputs0 = map[string]interface{}

// RunCreateSchemaExtended_Outputs defines model for RunCreateSchemaExtended.Outputs.
type RunCreateSchemaExtended_Outputs struct {
	union json.RawMessage
}

// RunTypeEnum Enum for run types.
type RunTypeEnum string

// RunUpdateSchemaExtended defines model for RunUpdateSchemaExtended.
type RunUpdateSchemaExtended struct {
	EndTime *time.Time                       `json:"end_time,omitempty"`
	Error   *string                          `json:"error,omitempty"`
	Events  *[]map[string]interface{}        `json:"events,omitempty"`
	Inputs  *RunUpdateSchemaExtended_Inputs  `json:"inputs,omitempty"`
	Outputs *RunUpdateSchemaExtended_Outputs `json:"outputs,omitempty"`
}

// RunUpdateSchemaExtendedInputs0 defines model for .
type RunUpdateSchemaExtendedInputs0 = map[string]interface{}

// RunUpdateSchemaExtended_Inputs defines model for RunUpdateSchemaExtended.Inputs.
type RunUpdateSchemaExtended_Inputs struct {
	union json.RawMessage
}

// RunUpdateSchemaExtendedOutputs0 defines model for .
type RunUpdateSchemaExtendedOutputs0 = map[string]interface{}

// RunUpdateSchemaExtended_Outputs defines model for RunUpdateSchemaExtended.Outputs.
type RunUpdateSchemaExtended_Outputs struct {
	union json.RawMessage
}

// ValidationError defines model for ValidationError.
type ValidationError struct {
	Loc  []ValidationError_Loc_Item `json:"loc"`
	Msg  string                     `json:"msg"`
	Type string                     `json:"type"`
}

// ValidationErrorLoc0 defines model for .
type ValidationErrorLoc0 = string

// ValidationErrorLoc1 defines model for .
type ValidationErrorLoc1 = int

// ValidationError_Loc_Item defines model for ValidationError.loc.Item.
type ValidationError_Loc_Item struct {
	union json.RawMessage
}

// CreateRunRunsPostJSONRequestBody defines body for CreateRunRunsPost for application/json ContentType.
type CreateRunRunsPostJSONRequestBody = RunCreateSchemaExtended

// UpdateRunRunsRunIdPatchJSONRequestBody defines body for UpdateRunRunsRunIdPatch for application/json ContentType.
type UpdateRunRunsRunIdPatchJSONRequestBody = RunUpdateSchemaExtended

// AsCreateChatCompletionRequestStop0 returns the union data inside the CreateChatCompletionRequest_Stop as a CreateChatCompletionRequestStop0
func (t CreateChatCompletionRequest_Stop) AsCreateChatCompletionRequestStop0() (CreateChatCompletionRequestStop0, error) {
	var body CreateChatCompletionRequestStop0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateChatCompletionRequestStop0 overwrites any union data inside the CreateChatCompletionRequest_Stop as the provided CreateChatCompletionRequestStop0
func (t *CreateChatCompletionRequest_Stop) FromCreateChatCompletionRequestStop0(v CreateChatCompletionRequestStop0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateChatCompletionRequestStop0 performs a merge with any union data inside the CreateChatCompletionRequest_Stop, using the provided CreateChatCompletionRequestStop0
func (t *CreateChatCompletionRequest_Stop) MergeCreateChatCompletionRequestStop0(v CreateChatCompletionRequestStop0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCreateChatCompletionRequestStop1 returns the union data inside the CreateChatCompletionRequest_Stop as a CreateChatCompletionRequestStop1
func (t CreateChatCompletionRequest_Stop) AsCreateChatCompletionRequestStop1() (CreateChatCompletionRequestStop1, error) {
	var body CreateChatCompletionRequestStop1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateChatCompletionRequestStop1 overwrites any union data inside the CreateChatCompletionRequest_Stop as the provided CreateChatCompletionRequestStop1
func (t *CreateChatCompletionRequest_Stop) FromCreateChatCompletionRequestStop1(v CreateChatCompletionRequestStop1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateChatCompletionRequestStop1 performs a merge with any union data inside the CreateChatCompletionRequest_Stop, using the provided CreateChatCompletionRequestStop1
func (t *CreateChatCompletionRequest_Stop) MergeCreateChatCompletionRequestStop1(v CreateChatCompletionRequestStop1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t CreateChatCompletionRequest_Stop) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *CreateChatCompletionRequest_Stop) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsCreateCompletionRequestModel10 returns the union data inside the CreateCompletionRequest_Model_1_AdditionalProperties as a CreateCompletionRequestModel10
func (t CreateCompletionRequest_Model_1_AdditionalProperties) AsCreateCompletionRequestModel10() (CreateCompletionRequestModel10, error) {
	var body CreateCompletionRequestModel10
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateCompletionRequestModel10 overwrites any union data inside the CreateCompletionRequest_Model_1_AdditionalProperties as the provided CreateCompletionRequestModel10
func (t *CreateCompletionRequest_Model_1_AdditionalProperties) FromCreateCompletionRequestModel10(v CreateCompletionRequestModel10) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateCompletionRequestModel10 performs a merge with any union data inside the CreateCompletionRequest_Model_1_AdditionalProperties, using the provided CreateCompletionRequestModel10
func (t *CreateCompletionRequest_Model_1_AdditionalProperties) MergeCreateCompletionRequestModel10(v CreateCompletionRequestModel10) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCreateCompletionRequestModel11 returns the union data inside the CreateCompletionRequest_Model_1_AdditionalProperties as a CreateCompletionRequestModel11
func (t CreateCompletionRequest_Model_1_AdditionalProperties) AsCreateCompletionRequestModel11() (CreateCompletionRequestModel11, error) {
	var body CreateCompletionRequestModel11
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateCompletionRequestModel11 overwrites any union data inside the CreateCompletionRequest_Model_1_AdditionalProperties as the provided CreateCompletionRequestModel11
func (t *CreateCompletionRequest_Model_1_AdditionalProperties) FromCreateCompletionRequestModel11(v CreateCompletionRequestModel11) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateCompletionRequestModel11 performs a merge with any union data inside the CreateCompletionRequest_Model_1_AdditionalProperties, using the provided CreateCompletionRequestModel11
func (t *CreateCompletionRequest_Model_1_AdditionalProperties) MergeCreateCompletionRequestModel11(v CreateCompletionRequestModel11) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t CreateCompletionRequest_Model_1_AdditionalProperties) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *CreateCompletionRequest_Model_1_AdditionalProperties) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsCreateCompletionRequestModel0 returns the union data inside the CreateCompletionRequest_Model as a CreateCompletionRequestModel0
func (t CreateCompletionRequest_Model) AsCreateCompletionRequestModel0() (CreateCompletionRequestModel0, error) {
	var body CreateCompletionRequestModel0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateCompletionRequestModel0 overwrites any union data inside the CreateCompletionRequest_Model as the provided CreateCompletionRequestModel0
func (t *CreateCompletionRequest_Model) FromCreateCompletionRequestModel0(v CreateCompletionRequestModel0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateCompletionRequestModel0 performs a merge with any union data inside the CreateCompletionRequest_Model, using the provided CreateCompletionRequestModel0
func (t *CreateCompletionRequest_Model) MergeCreateCompletionRequestModel0(v CreateCompletionRequestModel0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCreateCompletionRequestModel1 returns the union data inside the CreateCompletionRequest_Model as a CreateCompletionRequestModel1
func (t CreateCompletionRequest_Model) AsCreateCompletionRequestModel1() (CreateCompletionRequestModel1, error) {
	var body CreateCompletionRequestModel1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateCompletionRequestModel1 overwrites any union data inside the CreateCompletionRequest_Model as the provided CreateCompletionRequestModel1
func (t *CreateCompletionRequest_Model) FromCreateCompletionRequestModel1(v CreateCompletionRequestModel1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateCompletionRequestModel1 performs a merge with any union data inside the CreateCompletionRequest_Model, using the provided CreateCompletionRequestModel1
func (t *CreateCompletionRequest_Model) MergeCreateCompletionRequestModel1(v CreateCompletionRequestModel1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t CreateCompletionRequest_Model) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *CreateCompletionRequest_Model) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsCreateCompletionRequestPrompt0 returns the union data inside the CreateCompletionRequest_Prompt as a CreateCompletionRequestPrompt0
func (t CreateCompletionRequest_Prompt) AsCreateCompletionRequestPrompt0() (CreateCompletionRequestPrompt0, error) {
	var body CreateCompletionRequestPrompt0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateCompletionRequestPrompt0 overwrites any union data inside the CreateCompletionRequest_Prompt as the provided CreateCompletionRequestPrompt0
func (t *CreateCompletionRequest_Prompt) FromCreateCompletionRequestPrompt0(v CreateCompletionRequestPrompt0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateCompletionRequestPrompt0 performs a merge with any union data inside the CreateCompletionRequest_Prompt, using the provided CreateCompletionRequestPrompt0
func (t *CreateCompletionRequest_Prompt) MergeCreateCompletionRequestPrompt0(v CreateCompletionRequestPrompt0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCreateCompletionRequestPrompt1 returns the union data inside the CreateCompletionRequest_Prompt as a CreateCompletionRequestPrompt1
func (t CreateCompletionRequest_Prompt) AsCreateCompletionRequestPrompt1() (CreateCompletionRequestPrompt1, error) {
	var body CreateCompletionRequestPrompt1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateCompletionRequestPrompt1 overwrites any union data inside the CreateCompletionRequest_Prompt as the provided CreateCompletionRequestPrompt1
func (t *CreateCompletionRequest_Prompt) FromCreateCompletionRequestPrompt1(v CreateCompletionRequestPrompt1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateCompletionRequestPrompt1 performs a merge with any union data inside the CreateCompletionRequest_Prompt, using the provided CreateCompletionRequestPrompt1
func (t *CreateCompletionRequest_Prompt) MergeCreateCompletionRequestPrompt1(v CreateCompletionRequestPrompt1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCreateCompletionRequestPrompt2 returns the union data inside the CreateCompletionRequest_Prompt as a CreateCompletionRequestPrompt2
func (t CreateCompletionRequest_Prompt) AsCreateCompletionRequestPrompt2() (CreateCompletionRequestPrompt2, error) {
	var body CreateCompletionRequestPrompt2
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateCompletionRequestPrompt2 overwrites any union data inside the CreateCompletionRequest_Prompt as the provided CreateCompletionRequestPrompt2
func (t *CreateCompletionRequest_Prompt) FromCreateCompletionRequestPrompt2(v CreateCompletionRequestPrompt2) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateCompletionRequestPrompt2 performs a merge with any union data inside the CreateCompletionRequest_Prompt, using the provided CreateCompletionRequestPrompt2
func (t *CreateCompletionRequest_Prompt) MergeCreateCompletionRequestPrompt2(v CreateCompletionRequestPrompt2) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCreateCompletionRequestPrompt3 returns the union data inside the CreateCompletionRequest_Prompt as a CreateCompletionRequestPrompt3
func (t CreateCompletionRequest_Prompt) AsCreateCompletionRequestPrompt3() (CreateCompletionRequestPrompt3, error) {
	var body CreateCompletionRequestPrompt3
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateCompletionRequestPrompt3 overwrites any union data inside the CreateCompletionRequest_Prompt as the provided CreateCompletionRequestPrompt3
func (t *CreateCompletionRequest_Prompt) FromCreateCompletionRequestPrompt3(v CreateCompletionRequestPrompt3) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateCompletionRequestPrompt3 performs a merge with any union data inside the CreateCompletionRequest_Prompt, using the provided CreateCompletionRequestPrompt3
func (t *CreateCompletionRequest_Prompt) MergeCreateCompletionRequestPrompt3(v CreateCompletionRequestPrompt3) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t CreateCompletionRequest_Prompt) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *CreateCompletionRequest_Prompt) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsCreateCompletionRequestStop0 returns the union data inside the CreateCompletionRequest_Stop as a CreateCompletionRequestStop0
func (t CreateCompletionRequest_Stop) AsCreateCompletionRequestStop0() (CreateCompletionRequestStop0, error) {
	var body CreateCompletionRequestStop0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateCompletionRequestStop0 overwrites any union data inside the CreateCompletionRequest_Stop as the provided CreateCompletionRequestStop0
func (t *CreateCompletionRequest_Stop) FromCreateCompletionRequestStop0(v CreateCompletionRequestStop0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateCompletionRequestStop0 performs a merge with any union data inside the CreateCompletionRequest_Stop, using the provided CreateCompletionRequestStop0
func (t *CreateCompletionRequest_Stop) MergeCreateCompletionRequestStop0(v CreateCompletionRequestStop0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCreateCompletionRequestStop1 returns the union data inside the CreateCompletionRequest_Stop as a CreateCompletionRequestStop1
func (t CreateCompletionRequest_Stop) AsCreateCompletionRequestStop1() (CreateCompletionRequestStop1, error) {
	var body CreateCompletionRequestStop1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateCompletionRequestStop1 overwrites any union data inside the CreateCompletionRequest_Stop as the provided CreateCompletionRequestStop1
func (t *CreateCompletionRequest_Stop) FromCreateCompletionRequestStop1(v CreateCompletionRequestStop1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateCompletionRequestStop1 performs a merge with any union data inside the CreateCompletionRequest_Stop, using the provided CreateCompletionRequestStop1
func (t *CreateCompletionRequest_Stop) MergeCreateCompletionRequestStop1(v CreateCompletionRequestStop1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t CreateCompletionRequest_Stop) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *CreateCompletionRequest_Stop) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsRunCreateSchemaExtendedInputs0 returns the union data inside the RunCreateSchemaExtended_Inputs as a RunCreateSchemaExtendedInputs0
func (t RunCreateSchemaExtended_Inputs) AsRunCreateSchemaExtendedInputs0() (RunCreateSchemaExtendedInputs0, error) {
	var body RunCreateSchemaExtendedInputs0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRunCreateSchemaExtendedInputs0 overwrites any union data inside the RunCreateSchemaExtended_Inputs as the provided RunCreateSchemaExtendedInputs0
func (t *RunCreateSchemaExtended_Inputs) FromRunCreateSchemaExtendedInputs0(v RunCreateSchemaExtendedInputs0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRunCreateSchemaExtendedInputs0 performs a merge with any union data inside the RunCreateSchemaExtended_Inputs, using the provided RunCreateSchemaExtendedInputs0
func (t *RunCreateSchemaExtended_Inputs) MergeRunCreateSchemaExtendedInputs0(v RunCreateSchemaExtendedInputs0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCreateChatCompletionRequest returns the union data inside the RunCreateSchemaExtended_Inputs as a CreateChatCompletionRequest
func (t RunCreateSchemaExtended_Inputs) AsCreateChatCompletionRequest() (CreateChatCompletionRequest, error) {
	var body CreateChatCompletionRequest
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateChatCompletionRequest overwrites any union data inside the RunCreateSchemaExtended_Inputs as the provided CreateChatCompletionRequest
func (t *RunCreateSchemaExtended_Inputs) FromCreateChatCompletionRequest(v CreateChatCompletionRequest) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateChatCompletionRequest performs a merge with any union data inside the RunCreateSchemaExtended_Inputs, using the provided CreateChatCompletionRequest
func (t *RunCreateSchemaExtended_Inputs) MergeCreateChatCompletionRequest(v CreateChatCompletionRequest) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCreateCompletionRequest returns the union data inside the RunCreateSchemaExtended_Inputs as a CreateCompletionRequest
func (t RunCreateSchemaExtended_Inputs) AsCreateCompletionRequest() (CreateCompletionRequest, error) {
	var body CreateCompletionRequest
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateCompletionRequest overwrites any union data inside the RunCreateSchemaExtended_Inputs as the provided CreateCompletionRequest
func (t *RunCreateSchemaExtended_Inputs) FromCreateCompletionRequest(v CreateCompletionRequest) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateCompletionRequest performs a merge with any union data inside the RunCreateSchemaExtended_Inputs, using the provided CreateCompletionRequest
func (t *RunCreateSchemaExtended_Inputs) MergeCreateCompletionRequest(v CreateCompletionRequest) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t RunCreateSchemaExtended_Inputs) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *RunCreateSchemaExtended_Inputs) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsRunCreateSchemaExtendedOutputs0 returns the union data inside the RunCreateSchemaExtended_Outputs as a RunCreateSchemaExtendedOutputs0
func (t RunCreateSchemaExtended_Outputs) AsRunCreateSchemaExtendedOutputs0() (RunCreateSchemaExtendedOutputs0, error) {
	var body RunCreateSchemaExtendedOutputs0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRunCreateSchemaExtendedOutputs0 overwrites any union data inside the RunCreateSchemaExtended_Outputs as the provided RunCreateSchemaExtendedOutputs0
func (t *RunCreateSchemaExtended_Outputs) FromRunCreateSchemaExtendedOutputs0(v RunCreateSchemaExtendedOutputs0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRunCreateSchemaExtendedOutputs0 performs a merge with any union data inside the RunCreateSchemaExtended_Outputs, using the provided RunCreateSchemaExtendedOutputs0
func (t *RunCreateSchemaExtended_Outputs) MergeRunCreateSchemaExtendedOutputs0(v RunCreateSchemaExtendedOutputs0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCreateChatCompletionResponse returns the union data inside the RunCreateSchemaExtended_Outputs as a CreateChatCompletionResponse
func (t RunCreateSchemaExtended_Outputs) AsCreateChatCompletionResponse() (CreateChatCompletionResponse, error) {
	var body CreateChatCompletionResponse
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateChatCompletionResponse overwrites any union data inside the RunCreateSchemaExtended_Outputs as the provided CreateChatCompletionResponse
func (t *RunCreateSchemaExtended_Outputs) FromCreateChatCompletionResponse(v CreateChatCompletionResponse) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateChatCompletionResponse performs a merge with any union data inside the RunCreateSchemaExtended_Outputs, using the provided CreateChatCompletionResponse
func (t *RunCreateSchemaExtended_Outputs) MergeCreateChatCompletionResponse(v CreateChatCompletionResponse) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCreateCompletionResponse returns the union data inside the RunCreateSchemaExtended_Outputs as a CreateCompletionResponse
func (t RunCreateSchemaExtended_Outputs) AsCreateCompletionResponse() (CreateCompletionResponse, error) {
	var body CreateCompletionResponse
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateCompletionResponse overwrites any union data inside the RunCreateSchemaExtended_Outputs as the provided CreateCompletionResponse
func (t *RunCreateSchemaExtended_Outputs) FromCreateCompletionResponse(v CreateCompletionResponse) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateCompletionResponse performs a merge with any union data inside the RunCreateSchemaExtended_Outputs, using the provided CreateCompletionResponse
func (t *RunCreateSchemaExtended_Outputs) MergeCreateCompletionResponse(v CreateCompletionResponse) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t RunCreateSchemaExtended_Outputs) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *RunCreateSchemaExtended_Outputs) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsRunUpdateSchemaExtendedInputs0 returns the union data inside the RunUpdateSchemaExtended_Inputs as a RunUpdateSchemaExtendedInputs0
func (t RunUpdateSchemaExtended_Inputs) AsRunUpdateSchemaExtendedInputs0() (RunUpdateSchemaExtendedInputs0, error) {
	var body RunUpdateSchemaExtendedInputs0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRunUpdateSchemaExtendedInputs0 overwrites any union data inside the RunUpdateSchemaExtended_Inputs as the provided RunUpdateSchemaExtendedInputs0
func (t *RunUpdateSchemaExtended_Inputs) FromRunUpdateSchemaExtendedInputs0(v RunUpdateSchemaExtendedInputs0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRunUpdateSchemaExtendedInputs0 performs a merge with any union data inside the RunUpdateSchemaExtended_Inputs, using the provided RunUpdateSchemaExtendedInputs0
func (t *RunUpdateSchemaExtended_Inputs) MergeRunUpdateSchemaExtendedInputs0(v RunUpdateSchemaExtendedInputs0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCreateChatCompletionRequest returns the union data inside the RunUpdateSchemaExtended_Inputs as a CreateChatCompletionRequest
func (t RunUpdateSchemaExtended_Inputs) AsCreateChatCompletionRequest() (CreateChatCompletionRequest, error) {
	var body CreateChatCompletionRequest
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateChatCompletionRequest overwrites any union data inside the RunUpdateSchemaExtended_Inputs as the provided CreateChatCompletionRequest
func (t *RunUpdateSchemaExtended_Inputs) FromCreateChatCompletionRequest(v CreateChatCompletionRequest) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateChatCompletionRequest performs a merge with any union data inside the RunUpdateSchemaExtended_Inputs, using the provided CreateChatCompletionRequest
func (t *RunUpdateSchemaExtended_Inputs) MergeCreateChatCompletionRequest(v CreateChatCompletionRequest) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCreateCompletionRequest returns the union data inside the RunUpdateSchemaExtended_Inputs as a CreateCompletionRequest
func (t RunUpdateSchemaExtended_Inputs) AsCreateCompletionRequest() (CreateCompletionRequest, error) {
	var body CreateCompletionRequest
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateCompletionRequest overwrites any union data inside the RunUpdateSchemaExtended_Inputs as the provided CreateCompletionRequest
func (t *RunUpdateSchemaExtended_Inputs) FromCreateCompletionRequest(v CreateCompletionRequest) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateCompletionRequest performs a merge with any union data inside the RunUpdateSchemaExtended_Inputs, using the provided CreateCompletionRequest
func (t *RunUpdateSchemaExtended_Inputs) MergeCreateCompletionRequest(v CreateCompletionRequest) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t RunUpdateSchemaExtended_Inputs) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *RunUpdateSchemaExtended_Inputs) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsRunUpdateSchemaExtendedOutputs0 returns the union data inside the RunUpdateSchemaExtended_Outputs as a RunUpdateSchemaExtendedOutputs0
func (t RunUpdateSchemaExtended_Outputs) AsRunUpdateSchemaExtendedOutputs0() (RunUpdateSchemaExtendedOutputs0, error) {
	var body RunUpdateSchemaExtendedOutputs0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRunUpdateSchemaExtendedOutputs0 overwrites any union data inside the RunUpdateSchemaExtended_Outputs as the provided RunUpdateSchemaExtendedOutputs0
func (t *RunUpdateSchemaExtended_Outputs) FromRunUpdateSchemaExtendedOutputs0(v RunUpdateSchemaExtendedOutputs0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRunUpdateSchemaExtendedOutputs0 performs a merge with any union data inside the RunUpdateSchemaExtended_Outputs, using the provided RunUpdateSchemaExtendedOutputs0
func (t *RunUpdateSchemaExtended_Outputs) MergeRunUpdateSchemaExtendedOutputs0(v RunUpdateSchemaExtendedOutputs0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCreateChatCompletionResponse returns the union data inside the RunUpdateSchemaExtended_Outputs as a CreateChatCompletionResponse
func (t RunUpdateSchemaExtended_Outputs) AsCreateChatCompletionResponse() (CreateChatCompletionResponse, error) {
	var body CreateChatCompletionResponse
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateChatCompletionResponse overwrites any union data inside the RunUpdateSchemaExtended_Outputs as the provided CreateChatCompletionResponse
func (t *RunUpdateSchemaExtended_Outputs) FromCreateChatCompletionResponse(v CreateChatCompletionResponse) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateChatCompletionResponse performs a merge with any union data inside the RunUpdateSchemaExtended_Outputs, using the provided CreateChatCompletionResponse
func (t *RunUpdateSchemaExtended_Outputs) MergeCreateChatCompletionResponse(v CreateChatCompletionResponse) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCreateCompletionResponse returns the union data inside the RunUpdateSchemaExtended_Outputs as a CreateCompletionResponse
func (t RunUpdateSchemaExtended_Outputs) AsCreateCompletionResponse() (CreateCompletionResponse, error) {
	var body CreateCompletionResponse
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreateCompletionResponse overwrites any union data inside the RunUpdateSchemaExtended_Outputs as the provided CreateCompletionResponse
func (t *RunUpdateSchemaExtended_Outputs) FromCreateCompletionResponse(v CreateCompletionResponse) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreateCompletionResponse performs a merge with any union data inside the RunUpdateSchemaExtended_Outputs, using the provided CreateCompletionResponse
func (t *RunUpdateSchemaExtended_Outputs) MergeCreateCompletionResponse(v CreateCompletionResponse) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t RunUpdateSchemaExtended_Outputs) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *RunUpdateSchemaExtended_Outputs) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsValidationErrorLoc0 returns the union data inside the ValidationError_Loc_Item as a ValidationErrorLoc0
func (t ValidationError_Loc_Item) AsValidationErrorLoc0() (ValidationErrorLoc0, error) {
	var body ValidationErrorLoc0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromValidationErrorLoc0 overwrites any union data inside the ValidationError_Loc_Item as the provided ValidationErrorLoc0
func (t *ValidationError_Loc_Item) FromValidationErrorLoc0(v ValidationErrorLoc0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeValidationErrorLoc0 performs a merge with any union data inside the ValidationError_Loc_Item, using the provided ValidationErrorLoc0
func (t *ValidationError_Loc_Item) MergeValidationErrorLoc0(v ValidationErrorLoc0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsValidationErrorLoc1 returns the union data inside the ValidationError_Loc_Item as a ValidationErrorLoc1
func (t ValidationError_Loc_Item) AsValidationErrorLoc1() (ValidationErrorLoc1, error) {
	var body ValidationErrorLoc1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromValidationErrorLoc1 overwrites any union data inside the ValidationError_Loc_Item as the provided ValidationErrorLoc1
func (t *ValidationError_Loc_Item) FromValidationErrorLoc1(v ValidationErrorLoc1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeValidationErrorLoc1 performs a merge with any union data inside the ValidationError_Loc_Item, using the provided ValidationErrorLoc1
func (t *ValidationError_Loc_Item) MergeValidationErrorLoc1(v ValidationErrorLoc1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t ValidationError_Loc_Item) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ValidationError_Loc_Item) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// RequestEditorFn  is the function signature for the RequestEditor callback function
type RequestEditorFn func(ctx context.Context, req *http.Request) error

// Doer performs HTTP requests.
//
// The standard http.Client implements this interface.
type HttpRequestDoer interface {
	Do(req *http.Request) (*http.Response, error)
}

// Client which conforms to the OpenAPI3 specification for this service.
type Client struct {
	// The endpoint of the server conforming to this interface, with scheme,
	// https://api.deepmap.com for example. This can contain a path relative
	// to the server, such as https://api.deepmap.com/dev-test, and all the
	// paths in the swagger spec will be appended to the server.
	Server string

	// Doer for performing requests, typically a *http.Client with any
	// customized settings, such as certificate chains.
	Client HttpRequestDoer

	// A list of callbacks for modifying requests which are generated before sending over
	// the network.
	RequestEditors []RequestEditorFn
}

// ClientOption allows setting custom parameters during construction
type ClientOption func(*Client) error

// Creates a new Client, with reasonable defaults
func NewClient(server string, opts ...ClientOption) (*Client, error) {
	// create a client with sane default values
	client := Client{
		Server: server,
	}
	// mutate client and add all optional params
	for _, o := range opts {
		if err := o(&client); err != nil {
			return nil, err
		}
	}
	// ensure the server URL always has a trailing slash
	if !strings.HasSuffix(client.Server, "/") {
		client.Server += "/"
	}
	// create httpClient, if not already present
	if client.Client == nil {
		client.Client = &http.Client{}
	}
	return &client, nil
}

// WithHTTPClient allows overriding the default Doer, which is
// automatically created using http.Client. This is useful for tests.
func WithHTTPClient(doer HttpRequestDoer) ClientOption {
	return func(c *Client) error {
		c.Client = doer
		return nil
	}
}

// WithRequestEditorFn allows setting up a callback function, which will be
// called right before sending the request. This can be used to mutate the request.
func WithRequestEditorFn(fn RequestEditorFn) ClientOption {
	return func(c *Client) error {
		c.RequestEditors = append(c.RequestEditors, fn)
		return nil
	}
}

// The interface specification for the client above.
type ClientInterface interface {
	// CreateRunRunsPostWithBody request with any body
	CreateRunRunsPostWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	CreateRunRunsPost(ctx context.Context, body CreateRunRunsPostJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// UpdateRunRunsRunIdPatchWithBody request with any body
	UpdateRunRunsRunIdPatchWithBody(ctx context.Context, runId openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	UpdateRunRunsRunIdPatch(ctx context.Context, runId openapi_types.UUID, body UpdateRunRunsRunIdPatchJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)
}

func (c *Client) CreateRunRunsPostWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCreateRunRunsPostRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) CreateRunRunsPost(ctx context.Context, body CreateRunRunsPostJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCreateRunRunsPostRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) UpdateRunRunsRunIdPatchWithBody(ctx context.Context, runId openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewUpdateRunRunsRunIdPatchRequestWithBody(c.Server, runId, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) UpdateRunRunsRunIdPatch(ctx context.Context, runId openapi_types.UUID, body UpdateRunRunsRunIdPatchJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewUpdateRunRunsRunIdPatchRequest(c.Server, runId, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

// NewCreateRunRunsPostRequest calls the generic CreateRunRunsPost builder with application/json body
func NewCreateRunRunsPostRequest(server string, body CreateRunRunsPostJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewCreateRunRunsPostRequestWithBody(server, "application/json", bodyReader)
}

// NewCreateRunRunsPostRequestWithBody generates requests for CreateRunRunsPost with any type of body
func NewCreateRunRunsPostRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/runs")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewUpdateRunRunsRunIdPatchRequest calls the generic UpdateRunRunsRunIdPatch builder with application/json body
func NewUpdateRunRunsRunIdPatchRequest(server string, runId openapi_types.UUID, body UpdateRunRunsRunIdPatchJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewUpdateRunRunsRunIdPatchRequestWithBody(server, runId, "application/json", bodyReader)
}

// NewUpdateRunRunsRunIdPatchRequestWithBody generates requests for UpdateRunRunsRunIdPatch with any type of body
func NewUpdateRunRunsRunIdPatchRequestWithBody(server string, runId openapi_types.UUID, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "run_id", runtime.ParamLocationPath, runId)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/runs/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("PATCH", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

func (c *Client) applyEditors(ctx context.Context, req *http.Request, additionalEditors []RequestEditorFn) error {
	for _, r := range c.RequestEditors {
		if err := r(ctx, req); err != nil {
			return err
		}
	}
	for _, r := range additionalEditors {
		if err := r(ctx, req); err != nil {
			return err
		}
	}
	return nil
}

// ClientWithResponses builds on ClientInterface to offer response payloads
type ClientWithResponses struct {
	ClientInterface
}

// NewClientWithResponses creates a new ClientWithResponses, which wraps
// Client with return type handling
func NewClientWithResponses(server string, opts ...ClientOption) (*ClientWithResponses, error) {
	client, err := NewClient(server, opts...)
	if err != nil {
		return nil, err
	}
	return &ClientWithResponses{client}, nil
}

// WithBaseURL overrides the baseURL.
func WithBaseURL(baseURL string) ClientOption {
	return func(c *Client) error {
		newBaseURL, err := url.Parse(baseURL)
		if err != nil {
			return err
		}
		c.Server = newBaseURL.String()
		return nil
	}
}

// ClientWithResponsesInterface is the interface specification for the client with responses above.
type ClientWithResponsesInterface interface {
	// CreateRunRunsPostWithBodyWithResponse request with any body
	CreateRunRunsPostWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CreateRunRunsPostResponse, error)

	CreateRunRunsPostWithResponse(ctx context.Context, body CreateRunRunsPostJSONRequestBody, reqEditors ...RequestEditorFn) (*CreateRunRunsPostResponse, error)

	// UpdateRunRunsRunIdPatchWithBodyWithResponse request with any body
	UpdateRunRunsRunIdPatchWithBodyWithResponse(ctx context.Context, runId openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*UpdateRunRunsRunIdPatchResponse, error)

	UpdateRunRunsRunIdPatchWithResponse(ctx context.Context, runId openapi_types.UUID, body UpdateRunRunsRunIdPatchJSONRequestBody, reqEditors ...RequestEditorFn) (*UpdateRunRunsRunIdPatchResponse, error)
}

type CreateRunRunsPostResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *interface{}
	JSON422      *HTTPValidationError
}

// Status returns HTTPResponse.Status
func (r CreateRunRunsPostResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r CreateRunRunsPostResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type UpdateRunRunsRunIdPatchResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *interface{}
	JSON422      *HTTPValidationError
}

// Status returns HTTPResponse.Status
func (r UpdateRunRunsRunIdPatchResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r UpdateRunRunsRunIdPatchResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

// CreateRunRunsPostWithBodyWithResponse request with arbitrary body returning *CreateRunRunsPostResponse
func (c *ClientWithResponses) CreateRunRunsPostWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CreateRunRunsPostResponse, error) {
	rsp, err := c.CreateRunRunsPostWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCreateRunRunsPostResponse(rsp)
}

func (c *ClientWithResponses) CreateRunRunsPostWithResponse(ctx context.Context, body CreateRunRunsPostJSONRequestBody, reqEditors ...RequestEditorFn) (*CreateRunRunsPostResponse, error) {
	rsp, err := c.CreateRunRunsPost(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCreateRunRunsPostResponse(rsp)
}

// UpdateRunRunsRunIdPatchWithBodyWithResponse request with arbitrary body returning *UpdateRunRunsRunIdPatchResponse
func (c *ClientWithResponses) UpdateRunRunsRunIdPatchWithBodyWithResponse(ctx context.Context, runId openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*UpdateRunRunsRunIdPatchResponse, error) {
	rsp, err := c.UpdateRunRunsRunIdPatchWithBody(ctx, runId, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseUpdateRunRunsRunIdPatchResponse(rsp)
}

func (c *ClientWithResponses) UpdateRunRunsRunIdPatchWithResponse(ctx context.Context, runId openapi_types.UUID, body UpdateRunRunsRunIdPatchJSONRequestBody, reqEditors ...RequestEditorFn) (*UpdateRunRunsRunIdPatchResponse, error) {
	rsp, err := c.UpdateRunRunsRunIdPatch(ctx, runId, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseUpdateRunRunsRunIdPatchResponse(rsp)
}

// ParseCreateRunRunsPostResponse parses an HTTP response from a CreateRunRunsPostWithResponse call
func ParseCreateRunRunsPostResponse(rsp *http.Response) (*CreateRunRunsPostResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &CreateRunRunsPostResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest interface{}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 422:
		var dest HTTPValidationError
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON422 = &dest

	}

	return response, nil
}

// ParseUpdateRunRunsRunIdPatchResponse parses an HTTP response from a UpdateRunRunsRunIdPatchWithResponse call
func ParseUpdateRunRunsRunIdPatchResponse(rsp *http.Response) (*UpdateRunRunsRunIdPatchResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &UpdateRunRunsRunIdPatchResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest interface{}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 422:
		var dest HTTPValidationError
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON422 = &dest

	}

	return response, nil
}
